version: '3'

networks:
  default:
    name: containers_bridge
    external: true  

services:
  # The Wordpress CMS itself
  mysitewordpress:
    build:
      context: .
    restart: always
    logging:
      # Configure the logs retention according to your needs
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      # Connect WordPress to the database
      WORDPRESS_DB_HOST: mysitedb:3306
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
    volumes:
      # link the content of WordPress in a directory to enable local modifications
      - /volume1/docker/wordpress/data:/var/www/html
    depends_on:
        - mysitedb
        - mysiteredis
    labels:
      # The labels are usefull for Traefik only
      - "traefik.enable=true"
      - "traefik.http.routers.wordpressmysite.rule=Host(`${TRAEFIK_WORDPRESS}`)"
      - "traefik.http.routers.wordpressmysite.entrypoints=https"
      - "traefik.http.routers.wordpressmysite.tls=true"
      - "traefik.http.routers.wordpressmysite.tls.certresolver=mydnschallenge"
      # Watchtower Update
      - "com.centurylinklabs.watchtower.enable=false"      

  # The MySQL database
  mysitedb:
    # this is the database used by Wordpress
    image: mysql:5.7
    restart: always
    logging:
      # Configure the logs retention according to your needs
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      # Connect WordPrerss to the database
      MYSQL_DATABASE: ${WORDPRESS_DB_NAME}
      MYSQL_USER: ${WORDPRESS_DB_USER}
      MYSQL_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      # Here, the database files are linked into a directory for direct access
      # You probably prefer to use a docker volume instead
      - /volume1/docker/mysql/db:/var/lib/mysql
    labels:
      # Watchtower Update
      - "com.centurylinklabs.watchtower.enable=false"         

  # Redis, used as a cache engine, drastically improve page load times
  # Install a Wordpress plugin like "W3 Total Cache" to get it working
  mysiteredis:
    image: redis:6
    restart: always
    logging:
      # Configure the logs retention according to your needs
      options:
        max-size: "10m"
        max-file: "3"
    ports:
      - "6379:6379"
    # launch Redis in cache mode with :
    #  - max memory up to 50% of your RAM if needed (--maxmemory 512mb)
    #  - deleting oldest data when max memory is reached (--maxmemory-policy allkeys-lru)
    entrypoint: redis-server --maxmemory 512mb -maxmemory-policy allkeys-lru
    labels:
      # Watchtower Update
      - "com.centurylinklabs.watchtower.enable=false"       
    
  # Graphical interface to the database
  # Can be useful for debug  
  mysitephpmyadmin:
    image: phpmyadmin/phpmyadmin
    depends_on:
      - mysitedb
    restart: always
    logging:
      # Configure the logs retention according to your needs
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=db
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
     - /sessions
    labels:
      # Watchtower Update
      - "com.centurylinklabs.watchtower.enable=false"